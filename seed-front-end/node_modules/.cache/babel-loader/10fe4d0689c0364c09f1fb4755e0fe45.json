{"ast":null,"code":"var _jsxFileName = \"/Users/joshstroud/Desktop/react/cise-seeds/seed-front-end/src/BasicTable.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTable } from 'react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BasicTable() {\n  _s();\n\n  // const columnHeaders = ['Title', 'Author', 'SE Method', 'Research Method', 'Journal', 'Article', 'Publish Date', 'Year', 'Moderated', 'Date Published'];\n  // const columnNames = ['col1', 'col2', 'col3', 'col4', 'col5', 'col6', 'col7', 'col8', 'col9', 'col10'];\n  const data = React.useMemo(() => [{\n    // col1: 'Hello',// title, author, se method, research method, journal, article, publish date, year, moderated, date published\n    // col2: 'World',\n    col1: 'r1c1',\n    col2: 'r1c2',\n    col3: 'r1c3'\n  }, {\n    col1: 'r2c1',\n    col2: 'r2c2',\n    col3: 'r2c3'\n  }, {\n    col1: 'r3c1',\n    col2: 'r3c2',\n    col3: 'r3c3'\n  }], []);\n  const columns = React.useMemo(() => [{\n    Header: 'Title',\n    accessor: 'col1' // accessor is the \"key\" in the data\n\n  }, {\n    Header: 'Author',\n    accessor: 'col2'\n  }, {\n    Header: 'SE Methods',\n    accessor: 'col3'\n  }, {\n    Header: 'Research Method',\n    accessor: 'col4'\n  }, {\n    Header: 'Journal',\n    accessor: 'col5'\n  }, {\n    Header: 'Article',\n    accessor: 'col6'\n  }, {\n    Header: 'Publish Date',\n    accessor: 'col7'\n  }, {\n    Header: 'Year',\n    accessor: 'col8'\n  }, {\n    Header: 'Moderated',\n    accessor: 'col9'\n  }, {\n    Header: 'Date Published',\n    accessor: 'col10'\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    style: {\n      border: 'solid 1px blue'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          style: {\n            borderBottom: 'solid 3px red',\n            background: 'aliceblue',\n            color: 'black',\n            fontWeight: 'bold'\n          },\n          children: column.render('Header')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n              style: {\n                padding: '10px',\n                border: 'solid 1px gray',\n                background: 'papayawhip'\n              },\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 7\n  }, this);\n}\n\n_s(BasicTable, \"R/oDYwWS8wBNHnfSA4aDMPyTENI=\", false, function () {\n  return [useTable];\n});\n\n_c = BasicTable;\nexport default BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["/Users/joshstroud/Desktop/react/cise-seeds/seed-front-end/src/BasicTable.js"],"names":["React","useTable","BasicTable","data","useMemo","col1","col2","col3","columns","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","border","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","borderBottom","background","color","fontWeight","render","row","getRowProps","cells","cell","getCellProps","padding"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useTable } from 'react-table'\n\nfunction BasicTable() {\n  // const columnHeaders = ['Title', 'Author', 'SE Method', 'Research Method', 'Journal', 'Article', 'Publish Date', 'Year', 'Moderated', 'Date Published'];\n  // const columnNames = ['col1', 'col2', 'col3', 'col4', 'col5', 'col6', 'col7', 'col8', 'col9', 'col10'];\n    const data = React.useMemo(\n \n      () => [\n \n        {\n \n          // col1: 'Hello',// title, author, se method, research method, journal, article, publish date, year, moderated, date published\n          \n          // col2: 'World',\n          col1: 'r1c1',\n          col2: 'r1c2',\n          col3: 'r1c3',\n \n        },\n \n        {\n \n          col1: 'r2c1',\n          col2: 'r2c2',\n          col3: 'r2c3',\n \n        },\n \n        {\n \n          col1: 'r3c1',\n          col2: 'r3c2',\n          col3: 'r3c3',\n \n        },\n \n      ],\n \n      []\n \n    )\n \n      \n    const columns = React.useMemo(\n \n      () => [\n \n        {\n \n          Header: 'Title',\n \n          accessor: 'col1', // accessor is the \"key\" in the data\n \n        },\n \n        {\n \n          Header: 'Author',\n \n          accessor: 'col2',\n \n        },\n        \n        {\n \n          Header: 'SE Methods',\n \n          accessor: 'col3',\n \n        },\n\n        {\n \n          Header: 'Research Method',\n \n          accessor: 'col4',\n \n        },\n\n        {\n \n          Header: 'Journal',\n \n          accessor: 'col5',\n \n        },\n\n        {\n \n          Header: 'Article',\n \n          accessor: 'col6',\n \n        },\n\n        {\n \n          Header: 'Publish Date',\n \n          accessor: 'col7',\n \n        },\n\n        {\n \n          Header: 'Year',\n \n          accessor: 'col8',\n \n        },\n\n        {\n \n          Header: 'Moderated',\n \n          accessor: 'col9',\n \n        },\n\n        {\n \n          Header: 'Date Published',\n \n          accessor: 'col10',\n \n        },\n\n      ],\n \n      []\n \n    )\n \n  \n \n    const {\n \n      getTableProps,\n \n      getTableBodyProps,\n \n      headerGroups,\n \n      rows,\n \n      prepareRow,\n \n    } = useTable({ columns, data })\n \n  \n \n    return (\n \n      <table {...getTableProps()} style={{ border: 'solid 1px blue' }}>\n \n        <thead>\n \n          {headerGroups.map(headerGroup => (\n \n            <tr {...headerGroup.getHeaderGroupProps()}>\n \n              {headerGroup.headers.map(column => (\n \n                <th\n \n                  {...column.getHeaderProps()}\n \n                  style={{\n \n                    borderBottom: 'solid 3px red',\n \n                    background: 'aliceblue',\n \n                    color: 'black',\n \n                    fontWeight: 'bold',\n \n                  }}\n \n                >\n \n                  {column.render('Header')}\n \n                </th>\n \n              ))}\n \n            </tr>\n \n          ))}\n \n        </thead>\n \n        <tbody {...getTableBodyProps()}>\n \n          {rows.map(row => {\n \n            prepareRow(row)\n \n            return (\n \n              <tr {...row.getRowProps()}>\n \n                {row.cells.map(cell => {\n \n                  return (\n \n                    <td\n \n                      {...cell.getCellProps()}\n \n                      style={{\n \n                        padding: '10px',\n \n                        border: 'solid 1px gray',\n \n                        background: 'papayawhip',\n \n                      }}\n \n                    >\n \n                      {cell.render('Cell')}\n \n                    </td>\n \n                  )\n \n                })}\n \n              </tr>\n \n            )\n \n          })}\n \n        </tbody>\n \n      </table>\n \n    )\n \n  }\n\n  export default BasicTable;"]},"metadata":{},"sourceType":"module"}